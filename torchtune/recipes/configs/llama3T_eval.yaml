# Config for multi-device full finetuning in full_finetune_distributed.py
# using a Llama3 8B Instruct model
#
# This config assumes that you've run the following command before launching
# this run:
#   tune download meta-llama/Meta-Llama-3-8B-Instruct --output-dir /tmp/Meta-Llama-3-8B-Instruct --hf-token <HF_TOKEN>
#
# To launch on 4 devices, run the following command from root:
#   tune run --nproc_per_node 2 full_finetune_distributed --config configs/llama3/8B_full_baseline.yaml
#
# You can add specific overrides through the command line. For example
# to override the checkpointer directory while launching training
# you can run:
#   tune run --nproc_per_node 4 full_finetune_distributed --config llama3/8B_full checkpointer.checkpoint_dir=<YOUR_CHECKPOINT_DIR>
#
# This config works best when the model is being fine-tuned on 2+ GPUs.
# Single device full finetuning requires more memory optimizations. It's
# best to use 8B_full_single_device.yaml for those cases


# Tokenizer
tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path: ../pretrained_models/llama3_8B/original/tokenizer.model
  
# Dataset
dataset:
  _component_: torchtune.datasets.InstructHierarchyValSeg
  source: ../data/evaluatedata/wild_jailbreak.json
  # - _component_: torchtune.datasets.InstructHierarchyVal
  #   source: ../data/evaluatedata/hijacking_dataset.json
    
seed: 0

shuffle: False

# Model Arguments
model:
  _component_: torchtune.models.llama3.llama3_8b_segment

checkpointer:
  _component_: torchtune.utils.FullModelMetaCheckpointer
  checkpoint_dir: ../pretrained_models/llama3_8B/original/
  checkpoint_files: [
    consolidated.00.pth
  ]
  recipe_checkpoint: null
  output_dir: ../models/Llama-3-8B-Base-Baseline/
  model_type: LLAMA3


batch_size: 4
device: cuda
dtype: bf16


output_dir: ../output/Llama-3-8B-Baseline/
output_name: Llama-3-8B-Baseline

# It is recommended to set enable_kv_cache=False for long-context models like Llama3.1
enable_kv_cache: True
quantizer: null

# generation 
max_new_tokens: 1024
temperature: 0.6 # 0.8 and 0.6 are popular values to try
top_k: 300

